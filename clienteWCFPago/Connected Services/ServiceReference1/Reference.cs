//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace clienteWCFPago.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tbl_Detalle", Namespace="http://schemas.datacontract.org/2004/07/WcfFactura1")]
    [System.SerializableAttribute()]
    public partial class tbl_Detalle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cantidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idDetalleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idFacturaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal valorTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal valorUField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cantidad {
            get {
                return this.cantidadField;
            }
            set {
                if ((this.cantidadField.Equals(value) != true)) {
                    this.cantidadField = value;
                    this.RaisePropertyChanged("cantidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descripcion {
            get {
                return this.descripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.descripcionField, value) != true)) {
                    this.descripcionField = value;
                    this.RaisePropertyChanged("descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idDetalle {
            get {
                return this.idDetalleField;
            }
            set {
                if ((this.idDetalleField.Equals(value) != true)) {
                    this.idDetalleField = value;
                    this.RaisePropertyChanged("idDetalle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idFactura {
            get {
                return this.idFacturaField;
            }
            set {
                if ((this.idFacturaField.Equals(value) != true)) {
                    this.idFacturaField = value;
                    this.RaisePropertyChanged("idFactura");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal valorT {
            get {
                return this.valorTField;
            }
            set {
                if ((this.valorTField.Equals(value) != true)) {
                    this.valorTField = value;
                    this.RaisePropertyChanged("valorT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal valorU {
            get {
                return this.valorUField;
            }
            set {
                if ((this.valorUField.Equals(value) != true)) {
                    this.valorUField = value;
                    this.RaisePropertyChanged("valorU");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tbl_Factura", Namespace="http://schemas.datacontract.org/2004/07/WcfFactura1")]
    [System.SerializableAttribute()]
    public partial class tbl_Factura : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ciudadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string direccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idFacturaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string numeroCedulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal subtotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telefonoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal totalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ciudad {
            get {
                return this.ciudadField;
            }
            set {
                if ((object.ReferenceEquals(this.ciudadField, value) != true)) {
                    this.ciudadField = value;
                    this.RaisePropertyChanged("ciudad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cliente {
            get {
                return this.clienteField;
            }
            set {
                if ((object.ReferenceEquals(this.clienteField, value) != true)) {
                    this.clienteField = value;
                    this.RaisePropertyChanged("cliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string direccion {
            get {
                return this.direccionField;
            }
            set {
                if ((object.ReferenceEquals(this.direccionField, value) != true)) {
                    this.direccionField = value;
                    this.RaisePropertyChanged("direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fecha {
            get {
                return this.fechaField;
            }
            set {
                if ((this.fechaField.Equals(value) != true)) {
                    this.fechaField = value;
                    this.RaisePropertyChanged("fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idFactura {
            get {
                return this.idFacturaField;
            }
            set {
                if ((this.idFacturaField.Equals(value) != true)) {
                    this.idFacturaField = value;
                    this.RaisePropertyChanged("idFactura");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string numeroCedula {
            get {
                return this.numeroCedulaField;
            }
            set {
                if ((object.ReferenceEquals(this.numeroCedulaField, value) != true)) {
                    this.numeroCedulaField = value;
                    this.RaisePropertyChanged("numeroCedula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal subtotal {
            get {
                return this.subtotalField;
            }
            set {
                if ((this.subtotalField.Equals(value) != true)) {
                    this.subtotalField = value;
                    this.RaisePropertyChanged("subtotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telefono {
            get {
                return this.telefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.telefonoField, value) != true)) {
                    this.telefonoField = value;
                    this.RaisePropertyChanged("telefono");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal total {
            get {
                return this.totalField;
            }
            set {
                if ((this.totalField.Equals(value) != true)) {
                    this.totalField = value;
                    this.RaisePropertyChanged("total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerDetalles", ReplyAction="http://tempuri.org/IService1/obtenerDetallesResponse")]
        clienteWCFPago.ServiceReference1.tbl_Detalle[] obtenerDetalles(int idFactura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerDetalles", ReplyAction="http://tempuri.org/IService1/obtenerDetallesResponse")]
        System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Detalle[]> obtenerDetallesAsync(int idFactura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerTodoDetalles", ReplyAction="http://tempuri.org/IService1/obtenerTodoDetallesResponse")]
        clienteWCFPago.ServiceReference1.tbl_Detalle[] obtenerTodoDetalles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerTodoDetalles", ReplyAction="http://tempuri.org/IService1/obtenerTodoDetallesResponse")]
        System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Detalle[]> obtenerTodoDetallesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerListaFacturas", ReplyAction="http://tempuri.org/IService1/obtenerListaFacturasResponse")]
        clienteWCFPago.ServiceReference1.tbl_Factura[] obtenerListaFacturas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerListaFacturas", ReplyAction="http://tempuri.org/IService1/obtenerListaFacturasResponse")]
        System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Factura[]> obtenerListaFacturasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerListaFacturasConFecha", ReplyAction="http://tempuri.org/IService1/obtenerListaFacturasConFechaResponse")]
        clienteWCFPago.ServiceReference1.tbl_Factura[] obtenerListaFacturasConFecha(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerListaFacturasConFecha", ReplyAction="http://tempuri.org/IService1/obtenerListaFacturasConFechaResponse")]
        System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Factura[]> obtenerListaFacturasConFechaAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerListaFacturasConCliente", ReplyAction="http://tempuri.org/IService1/obtenerListaFacturasConClienteResponse")]
        clienteWCFPago.ServiceReference1.tbl_Factura[] obtenerListaFacturasConCliente(string cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerListaFacturasConCliente", ReplyAction="http://tempuri.org/IService1/obtenerListaFacturasConClienteResponse")]
        System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Factura[]> obtenerListaFacturasConClienteAsync(string cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerFactura", ReplyAction="http://tempuri.org/IService1/obtenerFacturaResponse")]
        clienteWCFPago.ServiceReference1.tbl_Factura obtenerFactura(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerFactura", ReplyAction="http://tempuri.org/IService1/obtenerFacturaResponse")]
        System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Factura> obtenerFacturaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/eliminarFactura", ReplyAction="http://tempuri.org/IService1/eliminarFacturaResponse")]
        void eliminarFactura(int idFactura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/eliminarFactura", ReplyAction="http://tempuri.org/IService1/eliminarFacturaResponse")]
        System.Threading.Tasks.Task eliminarFacturaAsync(int idFactura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/agregarFactura", ReplyAction="http://tempuri.org/IService1/agregarFacturaResponse")]
        void agregarFactura(clienteWCFPago.ServiceReference1.tbl_Factura factura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/agregarFactura", ReplyAction="http://tempuri.org/IService1/agregarFacturaResponse")]
        System.Threading.Tasks.Task agregarFacturaAsync(clienteWCFPago.ServiceReference1.tbl_Factura factura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/agregarDetalle", ReplyAction="http://tempuri.org/IService1/agregarDetalleResponse")]
        void agregarDetalle(clienteWCFPago.ServiceReference1.tbl_Detalle detalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/agregarDetalle", ReplyAction="http://tempuri.org/IService1/agregarDetalleResponse")]
        System.Threading.Tasks.Task agregarDetalleAsync(clienteWCFPago.ServiceReference1.tbl_Detalle detalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/actualizarFacturas", ReplyAction="http://tempuri.org/IService1/actualizarFacturasResponse")]
        void actualizarFacturas(int ID, string ciudad, System.DateTime fecha, string cliente, string direccion, string CI, decimal subtotal, decimal total);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/actualizarFacturas", ReplyAction="http://tempuri.org/IService1/actualizarFacturasResponse")]
        System.Threading.Tasks.Task actualizarFacturasAsync(int ID, string ciudad, System.DateTime fecha, string cliente, string direccion, string CI, decimal subtotal, decimal total);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : clienteWCFPago.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<clienteWCFPago.ServiceReference1.IService1>, clienteWCFPago.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public clienteWCFPago.ServiceReference1.tbl_Detalle[] obtenerDetalles(int idFactura) {
            return base.Channel.obtenerDetalles(idFactura);
        }
        
        public System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Detalle[]> obtenerDetallesAsync(int idFactura) {
            return base.Channel.obtenerDetallesAsync(idFactura);
        }
        
        public clienteWCFPago.ServiceReference1.tbl_Detalle[] obtenerTodoDetalles() {
            return base.Channel.obtenerTodoDetalles();
        }
        
        public System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Detalle[]> obtenerTodoDetallesAsync() {
            return base.Channel.obtenerTodoDetallesAsync();
        }
        
        public clienteWCFPago.ServiceReference1.tbl_Factura[] obtenerListaFacturas() {
            return base.Channel.obtenerListaFacturas();
        }
        
        public System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Factura[]> obtenerListaFacturasAsync() {
            return base.Channel.obtenerListaFacturasAsync();
        }
        
        public clienteWCFPago.ServiceReference1.tbl_Factura[] obtenerListaFacturasConFecha(System.DateTime date) {
            return base.Channel.obtenerListaFacturasConFecha(date);
        }
        
        public System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Factura[]> obtenerListaFacturasConFechaAsync(System.DateTime date) {
            return base.Channel.obtenerListaFacturasConFechaAsync(date);
        }
        
        public clienteWCFPago.ServiceReference1.tbl_Factura[] obtenerListaFacturasConCliente(string cliente) {
            return base.Channel.obtenerListaFacturasConCliente(cliente);
        }
        
        public System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Factura[]> obtenerListaFacturasConClienteAsync(string cliente) {
            return base.Channel.obtenerListaFacturasConClienteAsync(cliente);
        }
        
        public clienteWCFPago.ServiceReference1.tbl_Factura obtenerFactura(int id) {
            return base.Channel.obtenerFactura(id);
        }
        
        public System.Threading.Tasks.Task<clienteWCFPago.ServiceReference1.tbl_Factura> obtenerFacturaAsync(int id) {
            return base.Channel.obtenerFacturaAsync(id);
        }
        
        public void eliminarFactura(int idFactura) {
            base.Channel.eliminarFactura(idFactura);
        }
        
        public System.Threading.Tasks.Task eliminarFacturaAsync(int idFactura) {
            return base.Channel.eliminarFacturaAsync(idFactura);
        }
        
        public void agregarFactura(clienteWCFPago.ServiceReference1.tbl_Factura factura) {
            base.Channel.agregarFactura(factura);
        }
        
        public System.Threading.Tasks.Task agregarFacturaAsync(clienteWCFPago.ServiceReference1.tbl_Factura factura) {
            return base.Channel.agregarFacturaAsync(factura);
        }
        
        public void agregarDetalle(clienteWCFPago.ServiceReference1.tbl_Detalle detalle) {
            base.Channel.agregarDetalle(detalle);
        }
        
        public System.Threading.Tasks.Task agregarDetalleAsync(clienteWCFPago.ServiceReference1.tbl_Detalle detalle) {
            return base.Channel.agregarDetalleAsync(detalle);
        }
        
        public void actualizarFacturas(int ID, string ciudad, System.DateTime fecha, string cliente, string direccion, string CI, decimal subtotal, decimal total) {
            base.Channel.actualizarFacturas(ID, ciudad, fecha, cliente, direccion, CI, subtotal, total);
        }
        
        public System.Threading.Tasks.Task actualizarFacturasAsync(int ID, string ciudad, System.DateTime fecha, string cliente, string direccion, string CI, decimal subtotal, decimal total) {
            return base.Channel.actualizarFacturasAsync(ID, ciudad, fecha, cliente, direccion, CI, subtotal, total);
        }
    }
}
